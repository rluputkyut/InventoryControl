@page "/PreOrder/Add"
@page "/PreOrder/Edit/{id:int}"
@using InventoryControl.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>PreOrder Entry</h3>

@if (headerInfo == null || headerInfo.Items == null)
{
    <p><em>Loading...</em></p>
}
else
{
<EditForm Model="headerInfo" OnValidSubmit="Create" class="card card-body bg-light mt-2">
    <DataAnnotationsValidator />

    <div class="col-12 row mt-2">
        <label for="Code" class="col-md-2 col-form-label">Code:</label>
        <div>
            <InputText id="Code" class="form-control" @bind-Value="headerInfo.Code" />
            <ValidationMessage For="@(()=> headerInfo.Code)" />
        </div>
    </div>
    <div class="col-12 row mt-2">
        <label for="customerId" class="col-md-2 col-form-label">Customer:</label>
        <div>
            <InputSelect id="CustomerId" class="form-control" @bind-Value="headerInfo.CustomerId">
                @if (customers != null)
                    {
                    @foreach (var info in customers)
                        {
                        <option value="@info.Id">@info.Name</option>
                        }
                    }
            </InputSelect>
            <ValidationMessage For="@(()=> headerInfo.CustomerId)" />
        </div>
    </div>
    <div class="col-12 row mt-2">
        <label for="Deposit" class="col-md-2 col-form-label">Deposit:</label>
        <div>
            <InputNumber id="Deposit" class="form-control" @bind-Value="headerInfo.Deposit" />
            <ValidationMessage For="@(()=> headerInfo.Deposit)" />
        </div>
    </div>
    <div class="col-12 row mt-2">
        <label for="WaitingDays" class="col-md-2 col-form-label">WaitingDay(s):</label>
        <div>
            <InputNumber id="WaitingDays" class="form-control" @bind-Value="headerInfo.WaitingDays" />
            <ValidationMessage For="@(()=> headerInfo.WaitingDays)" />
        </div>
    </div>
    <div class="col-12 row mt-2">
        <label for="Remark" class="col-md-2 col-form-label">Remark:</label>
        <div>
            <InputTextArea id="Remark" class="form-control" @bind-Value="headerInfo.Remark" />
            <ValidationMessage For="@(()=> headerInfo.Remark)" />
        </div>
    </div>
    <br />
    <div class="row col-md-12 mt-2">
        <label class="col-md-2">Product:</label>
        <div class="col-md-2">
            <InputSelect id="ProductId" class="form-control" @bind-Value="itemInfo.ProductId">
                @if (products != null)
                    {
                    @foreach (var product in products)
                        {
                        <option value="@product.Id">@product.Name</option>
                        }
                    }
            </InputSelect>
        </div>
        <label class="col-md-2">Quantity:</label>
        <div class="col-md-2">
            <InputNumber id="Quantity" class="form-control" @bind-Value="itemInfo.Quantity" />
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-primary" @onclick="@AddItem">Add</button>
            <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </div>
    </div>
    <br />
    <div class="col-md-12 mt-2">
        <table class="table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var info in headerInfo.Items)
                {
                    <tr>
                        <td>@info.ProductName</td>
                        <td>@info.Quantity</td>
                        <td>
                            <a style="text-underline-position:below; cursor:pointer; color:blue" @onclick="(() => OnEditItem(info.Id))">Edit</a> |
                            <a style="text-underline-position:below; cursor:pointer; color:blue" @onclick="(() => OnDeleteItem(info.Id))">Delete</a> |
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="@Back">Cancel</button>
        </div>
    </div>
</EditForm>
}

@code {

    [Parameter]
    public int id { get; set; }

    private PreOrderHeaderInfo headerInfo;
    private PreOrderItemInfo itemInfo;

    private List<CustomerInfo> customers;
    private List<ProductInfo> products;
    private string _imageData = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        headerInfo = new PreOrderHeaderInfo();
        itemInfo = new PreOrderItemInfo();

        products = await Http.GetFromJsonAsync<List<ProductInfo>>($"api/product/get");
        customers = await Http.GetFromJsonAsync<List<CustomerInfo>>($"api/customer/get");

        if (id > 0)
        {
            headerInfo = await Http.GetFromJsonAsync<PreOrderHeaderInfo>($"api/preorder/getheaderbyid/{id}");
            headerInfo.Items = await Http.GetFromJsonAsync<List<PreOrderItemInfo>>($"api/preorder/getitemsbyid/{id}");
        }
        else
        {
            headerInfo.Items = new List<PreOrderItemInfo>();
        }
    }

    private async Task Create()
    {
        if (headerInfo.Id == 0)
            await Http.PostAsJsonAsync<PreOrderHeaderInfo>("api/preorder/save", headerInfo);
        else
            await Http.PutAsJsonAsync<PreOrderHeaderInfo>("api/preorder/update", headerInfo);

        NavigationManager.NavigateTo("/PreOrder/Index");
    }


    void Back()
    {
        NavigationManager.NavigateTo("/PreOrder/Index");
    }

    void AddItem()
    {
        itemInfo.HeaderId = id;
        itemInfo.ProductName = products.Where(x => x.Id == itemInfo.ProductId).Select(x => x.Name).FirstOrDefault();
        headerInfo.Items.Add(itemInfo);
        itemInfo = new PreOrderItemInfo();
    }

    void Cancel()
    {
        itemInfo = new PreOrderItemInfo();
    }

    void OnEditItem(int id)
    {
        itemInfo = headerInfo.Items.Where(x => x.Id == id).FirstOrDefault();
    }

    void OnDeleteItem(int id)
    {
        var _item = headerInfo.Items.Where(x => x.Id == id).FirstOrDefault();
        headerInfo.Items.Remove(_item);
    }
}
