@page "/PreOrder/Details/{id:int}"
@using InventoryControl.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>PreOrder Details</h3>

@if (headerOrder == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                Code:
            </dt>
            <dd>
                @headerOrder.Code
            </dd>

            <dt>
                Ordered Date:
            </dt>
            <dd>
                @headerOrder.OrderDate
            </dd>

            <dt>
                Customer:
            </dt>
            <dd>
                @headerOrder.CustomerName
            </dd>

            <dt>
                Waiting Days:
            </dt>
            <dd>
                @headerOrder.WaitingDays
            </dd>

            <dt>
                Deposit:
            </dt>
            <dd>
                @String.Format("{0:0.00}", headerOrder.Deposit)
            </dd>

            <dt>
                Remark:
            </dt>
            <dd>
                @headerOrder.Remark
            </dd>

            <dt>
                Status:
            </dt>
            @if (headerOrder.SoldOut)
            {
                <dd>Sold</dd>
            }
            else
            {
                <dd>Pending</dd>
            }

            <dt>
                Total Amount:
            </dt>
            <dd>
                @String.Format("{0:0.00}", headerOrder.Items.Sum(x => x.ProductPrice * x.Quantity))
            </dd>
        </dl>

        <table class="table">
            <tr>
                <th>
                    Product
                </th>
                <th>
                    Price
                </th>
                <th>
                    Quantity
                </th>
            </tr>

            @foreach (var item in headerOrder.Items)
            {
            <tr>
                <td>
                    @item.ProductName
                </td>
                <td>
                    @item.ProductPrice
                </td>
                <td>
                    @item.Quantity
                </td>
            </tr>
            }

        </table>

    </div>

}
<p>
    <button type="button" class="btn btn-secondary" @onclick="@OnBack">Back</button>
</p>

@code {

    [Parameter]
    public int id { get; set; }

    private PreOrderHeaderInfo headerOrder;

    protected override async Task OnInitializedAsync()
    {
        headerOrder = new PreOrderHeaderInfo();
        headerOrder.Items = new List<PreOrderItemInfo>();

        if (id > 0)
        {
            headerOrder = await Http.GetFromJsonAsync<PreOrderHeaderInfo>($"api/preorder/getheaderbyid/{id}");
            headerOrder.Items = await Http.GetFromJsonAsync<List<PreOrderItemInfo>>($"api/preorder/getitemsbyid/{id}");
        }

    }

    void OnBack()
    {
        NavigationManager.NavigateTo("/PreOrder/Index");
    }

}